syntax = "proto3";

import "ProtoMessages/Common.proto";
import "Intermediario.G4.Grpc/Shared/IntermediarioShared.proto";

package intermediario.G4.Grpc.Connect;

message ChangesMessage {
	int32 test = 1;
}

message DataMessage {
	enum CommandTypes {
		Ping = 0;
		ChannelClosed = 1;
		SetActive = 2;
		SetInactive = 3;
		UpdateYourself = 4;
		CloseProgram = 5;
		UnidentifiedConnect = 6;
	}

	oneof type {
		CommandTypes Command = 1;
	}
}

message IntermediarioConnectStateChangedMessage {
	int32 id = 1;
	bool gestorConnectActive = 2;
	bool intermediarioInitialized = 3;
}

message InstanceIdentityRequest {
	string databaseId = 1;
	string server = 2;
	string instance = 3;
	string databaseName = 4;
}

message InstanceIdentityResponse {
	protoMessages.ResponseResult result = 1;
	string token = 2;
	bool isActive = 3;
	bool isOutdated = 4;
}

enum CurrentState {
  // La base de datos esta creada y lista para recibir novedades
  DatabaseOk = 0;
  DatabaseOutOfSync = 1;
  DatabaseError = 2;
  ConnectInactive = 3;
  ConnectError = 4;
}

enum SendDBDumpState {
  // La base de datos fue creada y espero novedades
  Created = 0;
  // Fallo por algun motivo
  Failed = 1;
}

message GetCurrentStateResponse {
	CurrentState result = 1;
}

message SendDBDumpRequest {
	// String dump con el backup
	bytes dump = 2;
}

message SendDBDumpResponse {
	SendDBDumpState state = 1;
	string message = 2;
}

message SendDumpPermissionResponse {
	bool permissionGranted = 1;
}

message SendUpdateRequest {
	ConnectUpdateType codTipoActualizacion = 2;
	uint64 codActualizacion = 3;
	string sqlStatement = 5;
}

enum SendUpdateState {
// Se actualizo correctamente
  Updated = 0;
  // El SP no se ejecuto en su totalidad y/o hubo un error al ejecutarlo
  NotUpdated = 1;
  // Un error inesperado sucedio
  UnexpectedError = 2;
  // Intermediario dessincronizado
  OutOfSync = 3;
  // Intermediario sincronizado
  Synchronized = 4;
}

enum ConnectUpdateType {
	// 1	Actualizaci�n de Base de Datos (Estructura)
	// 2	Actualizaci�n de un Stored Procedure o Trigger
	// 3	Actualizaci�n de un Dato
	// 4	Actualizando Base de Datos GestorMax
	// 5	Intermediario Interrumpido
	// 6	Intermediario Sincronizado
	NoDataToSend = 0;
	UpdateStructure = 1;
	UpdateRoutines = 2;
	UpdateData = 3;
	UpdatingDataBase = 4;
	IntermediarioInterrupted = 5;
	ConnectCheckVersion = 6;
	SendRoutinesDump = 7;
}

message SendUpdateResponse{
	SendUpdateState state = 1;
	string message = 2;
}