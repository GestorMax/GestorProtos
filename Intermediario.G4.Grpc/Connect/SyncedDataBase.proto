syntax = "proto3";

//import "ProtoMessages/Common.proto";

package intermediario.G4.Grpc.Connect;

enum CurrentState {
  // La base de datos esta creada y lista para recibir novedades
  DatabaseOk = 0;
  DatabaseOutOfSync = 1;
  DatabaseError = 2;
}

enum SendDBDumpState {
  // La base de datos fue creada y espero novedades
  Created = 0;
  // Fallo por algun motivo
  Failed = 1;
}

message GetCurrentStateRequest {
	string token = 1;
}

message GetCurrentStateResponse {
	CurrentState result = 1;
}

message SendDBDumpRequest {
	// String dump con el backup
	string token = 1;
	bytes dump = 2;
}

message SendDBDumpResponse {
	SendDBDumpState state = 1;
	string message = 2;
}

message SendDumpPermissionRequest {
	string token = 1;
}

message SendDumpPermissionResponse {
	bool permissionGranted = 1;
}

message SendUpdateRequest {
	string token = 1;
	ConnectUpdateType codTipoActualizacion = 2;
	uint64 codActualizacion = 3;
	string sqlStatement = 5;
}


enum SendUpdateState {
// Se actualizo correctamente
  Updated = 0;
  // El SP no se ejecuto en su totalidad y/o hubo un error al ejecutarlo
  NotUpdated = 1;
  // Un error inesperado sucedio
  UnexpectedError = 2;
  // Intermediario dessincronizado
  OutOfSync = 3;
  // Intermediario sincronizado
  Synchronized = 4;
}

enum ConnectUpdateType {
	// 1	Actualización de Base de Datos (Estructura)
	// 2	Actualización de un Stored Procedure o Trigger
	// 3	Actualización de un Dato
	// 4	Actualizando Base de Datos GestorMax
	// 5	Intermediario Interrumpido
	// 6	Intermediario Sincronizado
	NoDataToSend = 0;
	UpdateStructure = 1;
	UpdateRoutines = 2;
	UpdateData = 3;
	UpdatingDataBase = 4;
	IntermediarioInterrupted = 5;
	ConnectCheckVersion = 6;
}

message SendUpdateResponse{
	SendUpdateState state = 1;
	string message = 2;
}