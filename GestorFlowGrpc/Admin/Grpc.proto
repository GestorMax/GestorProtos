syntax = "proto3";

import "google/protobuf/Empty.proto";
import "ProtoMessages/Common.proto";
import "GestorFlowGrpc/Admin/Messages.proto";

package gestorFlowGrpcAdmin;

service GestorFlowAdmin {

	//States
	rpc ListProcessStates(google.protobuf.Empty) returns (ProcessStateMessageList);
	rpc GetProcessState(protoMessages.Int32Message) returns (ProcessStateResponse);
	rpc CreateProcessState(ProcessStateMessage) returns (ProcessStateResponse);
	rpc UpdateProcessState(ProcessStateMessage) returns (ProcessStateResponse);
	rpc DeleteProcessState(protoMessages.Int32Message) returns (protoMessages.ResponseResult);

	rpc ListProcessStateMaps(google.protobuf.Empty) returns (ProcessStateMapMessageList);
	rpc GetProcessStateMap(protoMessages.Int32Message) returns (ProcessStateMapResponse);
	rpc CreateProcessStateMap(ProcessTypeMessage) returns (ProcessStateMapResponse);
	rpc UpdateProcessStateMap(ProcessTypeMessage) returns (ProcessStateMapResponse);
	rpc DeleteProcessStateMap(protoMessages.Int32Message) returns (protoMessages.ResponseResult);

	rpc ListProcessTypes(google.protobuf.Empty) returns (ProcessTypeMessageList);
	rpc GetProcessType(protoMessages.Int32Message) returns (ProcessTypeResponse);
	rpc CreateProcessType(ProcessTypeMessage) returns (ProcessTypeResponse);
	rpc UpdateProcessType(ProcessTypeMessage) returns (ProcessTypeResponse);
	rpc DeleteProcessType(protoMessages.Int32Message) returns (protoMessages.ResponseResult);
}
